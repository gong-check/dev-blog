{"version":3,"file":"component---src-templates-blog-post-js-51cf8d8c7b0bef775cee.js","mappings":"oMAwBA,EArBY,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACb,GAA0BC,EAAAA,EAAAA,GAAYD,GAA9BE,EAAR,EAAQA,IAAKC,EAAb,EAAaA,SAEb,OACE,uBAAKC,UAAU,OACb,uBACEA,UAAU,aACVC,IAAKH,EACLI,MAAO,GACPC,OAAQ,GACRC,IAAI,YAGN,2BACE,8BAASR,GACT,yCAAiBG,M,6BC4BzB,EAtCyB,SAAC,GAAwB,IAAD,EAArBM,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,cACZC,EAAOR,EAAKG,eAAeM,OAAOD,KAClCE,GAAWC,EAAAA,EAAAA,GAAgBH,GAEjC,OACE,gBAAC,IAAD,CAAQP,SAAUA,EAAUM,MAAOH,GACjC,gBAAC,IAAD,CACEG,MAAOL,EAAKU,YAAYL,MACxBM,YAAaX,EAAKU,YAAYC,aAAeX,EAAKY,UAEpD,uBAAKnB,UAAU,gBACb,2BACEA,UAAU,YACVoB,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YACVf,EAAKU,YAAYL,OAASG,EAASH,OAEtC,2BAAML,EAAKU,YAAYM,MAAQ,aAEjC,2BACEC,wBAAyB,CAAEC,OAAQlB,EAAKmB,MACxCJ,SAAS,gBAEX,uBAAKtB,UAAU,oBACf,8BACE,gBAAC,EAAD,CAAKJ,KAAMmB,EAASY,e,mBChChC,IANwB,SAAAd,GACtB,IAAMe,EAAOf,EAAKgB,MAAM,KAAKC,QAAO,SAAAC,GAAI,QAAMA,KAE9C,MAAO,CAAEhC,SAAU6B,EAAK,GAAID,OAAQC,EAAK,GAAIhB,MAAOgB,EAAK,M,mBCH3D,IAAMI,EAAYC,OAAOC,OAAO,CAC9BC,MAAK,CACHrC,IAAK,uDACLC,SAAU,MAEZqC,OAAM,CACJtC,IAAK,uDACLC,SAAU,MAEZsC,MAAK,CACHvC,IAAK,uDACLC,SAAU,MAEZuC,IAAG,CACDxC,IAAK,uDACLC,SAAU,MAEZwC,KAAI,CACFzC,IAAK,uDACLC,SAAU,MAEZyC,MAAK,CACH1C,IAAK,uDACLC,SAAU,MAEZ0C,MAAK,CACH3C,IAAK,uDACLC,SAAU,MAEZ2C,QAAS,CACP5C,IAAK,8DACLC,SAAU,QASd,IALoB,SAAAH,GAClB,OAAIoC,EAAUpC,GAAcoC,EAAUpC,GAC/BoC,EAAS","sources":["webpack://gong-check-dev-blog/./src/components/bio.js","webpack://gong-check-dev-blog/./src/templates/blog-post.js","webpack://gong-check-dev-blog/./src/utils/getInfoFromSlug.js","webpack://gong-check-dev-blog/./src/utils/getTeamInfo.js"],"sourcesContent":["import * as React from \"react\"\nimport getTeamInfo from \"../utils/getTeamInfo\"\n\nconst Bio = ({ name }) => {\n  const { img, division } = getTeamInfo(name)\n\n  return (\n    <div className=\"bio\">\n      <img\n        className=\"bio-avatar\"\n        src={img}\n        width={60}\n        height={60}\n        alt=\"profile\"\n      />\n\n      <div>\n        <strong>{name}</strong>\n        <div>우아한테크코스 4기 {division}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport getInfoFromSlug from \"../utils/getInfoFromSlug\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `공책 팀 개발 블로그`\n  const slug = data.markdownRemark.fields.slug\n  const postInfo = getInfoFromSlug(slug)\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <div className=\"post-wrapper\">\n        <article\n          className=\"blog-post\"\n          itemScope\n          itemType=\"http://schema.org/Article\"\n        >\n          <header>\n            <h1 itemProp=\"headline\">\n              {post.frontmatter.title || postInfo.title}\n            </h1>\n            <div>{post.frontmatter.date || \"작성 날짜 없음\"}</div>\n          </header>\n          <section\n            dangerouslySetInnerHTML={{ __html: post.html }}\n            itemProp=\"articleBody\"\n          />\n          <div className=\"footer-division\" />\n          <footer>\n            <Bio name={postInfo.author} />\n          </footer>\n        </article>\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($id: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"YYYY.MM.DD\")\n        description\n        tags\n      }\n    }\n  }\n`\n","const getInfoFromSlug = slug => {\n  const info = slug.split(\"/\").filter(item => !!item)\n\n  return { division: info[0], author: info[1], title: info[2] }\n}\n\nexport default getInfoFromSlug\n","const TEAM_INFO = Object.freeze({\n  온스타: {\n    img: \"https://avatars.githubusercontent.com/u/62434898?v=4\",\n    division: \"FE\",\n  },\n  코카콜라: {\n    img: \"https://avatars.githubusercontent.com/u/56149367?v=4\",\n    division: \"FE\",\n  },\n  어썸오: {\n    img: \"https://avatars.githubusercontent.com/u/63030569?v=4\",\n    division: \"BE\",\n  },\n  찬: {\n    img: \"https://avatars.githubusercontent.com/u/55445564?v=4\",\n    division: \"BE\",\n  },\n  오리: {\n    img: \"https://avatars.githubusercontent.com/u/69106910?v=4\",\n    division: \"BE\",\n  },\n  쿼리치: {\n    img: \"https://avatars.githubusercontent.com/u/83967672?v=4\",\n    division: \"BE\",\n  },\n  범고래: {\n    img: \"https://avatars.githubusercontent.com/u/48307960?v=4\",\n    division: \"BE\",\n  },\n  default: {\n    img: \"https://avatars.githubusercontent.com/u/108911083?s=200&v=4\",\n    division: \"BE\",\n  },\n})\n\nconst getTeamInfo = name => {\n  if (TEAM_INFO[name]) return TEAM_INFO[name]\n  return TEAM_INFO[\"default\"]\n}\n\nexport default getTeamInfo\n"],"names":["name","getTeamInfo","img","division","className","src","width","height","alt","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","slug","fields","postInfo","getInfoFromSlug","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","author","info","split","filter","item","TEAM_INFO","Object","freeze","온스타","코카콜라","어썸오","찬","오리","쿼리치","범고래","default"],"sourceRoot":""}