{"version":3,"file":"component---src-pages-index-js-bdc10297745c0af30b90.js","mappings":"qMAsFA,UA7EkB,SAAC,GAAwB,IAAD,EAArBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACzB,EAAsCC,EAAAA,SAAe,OAA9CC,EAAP,KAAoBC,EAApB,KACMC,GAAY,UAAAL,EAAKM,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQT,EAAKU,kBAAkBC,MAOrC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQX,SAAUA,EAAUO,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,cACX,uBAAKK,UAAU,YAAf,wBAMJ,gBAAC,IAAD,CAAQZ,SAAUA,EAAUO,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,cACX,uBAAKK,UAAU,gBACb,sBAAIC,MAAO,CAAEC,UAAU,SACrB,2BApBI,CAAC,MAAO,KAAM,MAqBXC,KAAI,SAAAC,GAAG,OACV,0BACEC,QAAS,SAAAC,GAAC,OArBC,SAACA,EAAGF,GAC3Bb,EAAea,GAoBWG,CAAiBD,EAAGF,IAClCJ,UAAWI,IAAQd,EAAc,qBAAuB,IAEvDc,OAINR,EAAMO,KAAI,SAAAK,GACT,IAAMC,GAAWC,EAAAA,EAAAA,GAAgBF,EAAKG,OAAOC,MACvCjB,EAAQa,EAAKK,YAAYlB,OAASc,EAASd,MACjD,GAA0BmB,EAAAA,EAAAA,GAAYL,EAASM,QAAvCC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,SAEb,GAAoB,QAAhB3B,GAAyB2B,IAAa3B,EAC1C,OACE,sBAAI4B,IAAKV,EAAKG,OAAOC,MACnB,2BACEZ,UAAU,iBACVmB,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAId,EAAKG,OAAOC,KAAMW,SAAS,OACnC,wBAAMA,SAAS,YAAY5B,MAIjC,+BACE,qBACE6B,wBAAyB,CACvBC,OAAQjB,EAAKK,YAAYa,aAAelB,EAAKmB,SAE/CJ,SAAS,iBAGb,8BACE,uBAAKK,IAAKZ,IACV,8BAASP,EAASM,QAClB,6BAAQP,EAAKK,YAAYgB,MAAQ,uB,mBCpErD,IANwB,SAAAjB,GACtB,IAAMkB,EAAOlB,EAAKmB,MAAM,KAAKC,QAAO,SAAAC,GAAI,QAAMA,KAE9C,MAAO,CAAEhB,SAAUa,EAAK,GAAIf,OAAQe,EAAK,GAAInC,MAAOmC,EAAK,M,mBCH3D,IAAMI,EAAYC,OAAOC,OAAO,CAC9BC,MAAK,CACHrB,IAAK,uDACLC,SAAU,MAEZqB,OAAM,CACJtB,IAAK,uDACLC,SAAU,MAEZsB,MAAK,CACHvB,IAAK,uDACLC,SAAU,MAEZuB,IAAG,CACDxB,IAAK,uDACLC,SAAU,MAEZwB,KAAI,CACFzB,IAAK,uDACLC,SAAU,MAEZyB,MAAK,CACH1B,IAAK,uDACLC,SAAU,MAEZ0B,MAAK,CACH3B,IAAK,uDACLC,SAAU,MAEZ2B,QAAS,CACP5B,IAAK,8DACLC,SAAU,QASd,IALoB,SAAA4B,GAClB,OAAIX,EAAUW,GAAcX,EAAUW,GAC/BX,EAAS","sources":["webpack://gong-check-dev-blog/./src/pages/index.js","webpack://gong-check-dev-blog/./src/utils/getInfoFromSlug.js","webpack://gong-check-dev-blog/./src/utils/getTeamInfo.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport getInfoFromSlug from \"../utils/getInfoFromSlug\"\nimport getTeamInfo from \"../utils/getTeamInfo\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst BlogIndex = ({ data, location }) => {\n  const [tagSelector, setTagSelector] = React.useState(\"All\")\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n  const TAG = [\"All\", \"FE\", \"BE\"]\n\n  const onClickTagButton = (e, tag) => {\n    setTagSelector(tag)\n  }\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"GongCheck\" />\n        <div className=\"no-posts\">작성된 게시글이 존재하지 않습니다.</div>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"GongCheck\" />\n      <div className=\"list-wrapper\">\n        <ol style={{ listStyle: `none` }}>\n          <div>\n            {TAG.map(tag => (\n              <button\n                onClick={e => onClickTagButton(e, tag)}\n                className={tag === tagSelector ? \"tag-button-clicked\" : \"\"}\n              >\n                {tag}\n              </button>\n            ))}\n          </div>\n          {posts.map(post => {\n            const postInfo = getInfoFromSlug(post.fields.slug)\n            const title = post.frontmatter.title || postInfo.title\n            const { img, division } = getTeamInfo(postInfo.author)\n\n            if (tagSelector !== \"All\" && division !== tagSelector) return\n            return (\n              <li key={post.fields.slug}>\n                <article\n                  className=\"post-list-item\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                >\n                  <header>\n                    <h2>\n                      <Link to={post.fields.slug} itemProp=\"url\">\n                        <span itemProp=\"headline\">{title}</span>\n                      </Link>\n                    </h2>\n                  </header>\n                  <section>\n                    <p\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.description || post.excerpt,\n                      }}\n                      itemProp=\"description\"\n                    />\n                  </section>\n                  <footer>\n                    <img src={img}></img>\n                    <strong>{postInfo.author}</strong>\n                    <small>{post.frontmatter.date || \"작성 날짜 없음\"}</small>\n                  </footer>\n                </article>\n              </li>\n            )\n          })}\n        </ol>\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY.MM.DD\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n","const getInfoFromSlug = slug => {\n  const info = slug.split(\"/\").filter(item => !!item)\n\n  return { division: info[0], author: info[1], title: info[2] }\n}\n\nexport default getInfoFromSlug\n","const TEAM_INFO = Object.freeze({\n  온스타: {\n    img: \"https://avatars.githubusercontent.com/u/62434898?v=4\",\n    division: \"FE\",\n  },\n  코카콜라: {\n    img: \"https://avatars.githubusercontent.com/u/56149367?v=4\",\n    division: \"FE\",\n  },\n  어썸오: {\n    img: \"https://avatars.githubusercontent.com/u/63030569?v=4\",\n    division: \"BE\",\n  },\n  찬: {\n    img: \"https://avatars.githubusercontent.com/u/55445564?v=4\",\n    division: \"BE\",\n  },\n  오리: {\n    img: \"https://avatars.githubusercontent.com/u/69106910?v=4\",\n    division: \"BE\",\n  },\n  쿼리치: {\n    img: \"https://avatars.githubusercontent.com/u/83967672?v=4\",\n    division: \"BE\",\n  },\n  범고래: {\n    img: \"https://avatars.githubusercontent.com/u/48307960?v=4\",\n    division: \"BE\",\n  },\n  default: {\n    img: \"https://avatars.githubusercontent.com/u/108911083?s=200&v=4\",\n    division: \"BE\",\n  },\n})\n\nconst getTeamInfo = name => {\n  if (TEAM_INFO[name]) return TEAM_INFO[name]\n  return TEAM_INFO[\"default\"]\n}\n\nexport default getTeamInfo\n"],"names":["data","location","React","tagSelector","setTagSelector","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","className","style","listStyle","map","tag","onClick","e","onClickTagButton","post","postInfo","getInfoFromSlug","fields","slug","frontmatter","getTeamInfo","author","img","division","key","itemScope","itemType","Link","to","itemProp","dangerouslySetInnerHTML","__html","description","excerpt","src","date","info","split","filter","item","TEAM_INFO","Object","freeze","온스타","코카콜라","어썸오","찬","오리","쿼리치","범고래","default","name"],"sourceRoot":""}